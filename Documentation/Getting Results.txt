===============================================================================
                            GT‑DB: Getting Results
===============================================================================

After the main pipeline (`make pipeline`) completes, you will find the following
outputs and optional services available.

1) Property‑Graph Exports
   Directory: exports/PropertyGraphs/
     • materials_graphs.json
         — Combined JSON with material‑level props and per‑material node & edge lists
     • nodes.csv, edges.csv
         — CSV tables of all nodes and edges (with properties) across materials
     • <material_id>_edgelist.txt
         — Plain edgelist file for each material subgraph
     • mol_graphs.pt
         — PyTorch‑Geometric dataset file for all molecule graphs
     • crystal_graphs.pt
         — PyTorch‑Geometric dataset file for all crystal graphs

2) Knowledge‑Graph Exports
   Directory: exports/KnowledgeGraphs/
     • materials.ttl
         — RDF/OWL Turtle serialization of the full knowledge graph
     • kg_mol_graphs.pt
         — PyG `.pt` for molecule knowledge graphs
     • kg_crystal_graphs.pt
         — PyG `.pt` for crystal knowledge graphs

3) Neo4j Database (optional)
   • Property‑graphs loaded via `make neo4j-pg`
   • Knowledge‑graph TTL imported via `make neo4j-kg` (requires n10s plugin)
   • Access Neo4j Browser at:
       – HTTP:  http://localhost:7474
       – Bolt:  bolt://localhost:7687
   • Run Cypher queries, explore nodes & relationships interactively

4) API Endpoints (optional)
   Served by `make serve`
     • SPARQL endpoint:
         http://127.0.0.1:5000/sparql
       – Issue GET/POST `?query=` requests for SPARQL queries
     • GraphQL endpoint (GraphiQL UI):
         http://127.0.0.1:5000/graphql
       – Craft GraphQL queries to retrieve materials, atoms, bonds, etc.

5) HTML Visualizations (optional)
   Directory: html_maps/
     • molecule_<material_id>.html
     • crystal_<material_id>.html
   — Interactive network views generated by PyVis; click & drag nodes, inspect attributes.

6) Experiment Tracking (optional)
   • MLflow server (if configured):
       http://127.0.0.1:5000
   — View logged pipeline runs, compare parameters, inspect artifacts
     (e.g. `.pt` files, JSON/CSV exports)

===============================================================================
